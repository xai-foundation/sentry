// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AirdropEnded extends ethereum.Event {
  get params(): AirdropEnded__Params {
    return new AirdropEnded__Params(this);
  }
}

export class AirdropEnded__Params {
  _event: AirdropEnded;

  constructor(event: AirdropEnded) {
    this._event = event;
  }
}

export class AirdropSegmentComplete extends ethereum.Event {
  get params(): AirdropSegmentComplete__Params {
    return new AirdropSegmentComplete__Params(this);
  }
}

export class AirdropSegmentComplete__Params {
  _event: AirdropSegmentComplete;

  constructor(event: AirdropSegmentComplete) {
    this._event = event;
  }

  get startingKeyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get endingKeyId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AirdropStarted extends ethereum.Event {
  get params(): AirdropStarted__Params {
    return new AirdropStarted__Params(this);
  }
}

export class AirdropStarted__Params {
  _event: AirdropStarted;

  constructor(event: AirdropStarted) {
    this._event = event;
  }

  get totalSupplyAtStart(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get keyMultiplier(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TinyKeysAirdrop extends ethereum.SmartContract {
  static bind(address: Address): TinyKeysAirdrop {
    return new TinyKeysAirdrop("TinyKeysAirdrop", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  airdropCounter(): BigInt {
    let result = super.call("airdropCounter", "airdropCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_airdropCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "airdropCounter",
      "airdropCounter():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  airdropStarted(): boolean {
    let result = super.call("airdropStarted", "airdropStarted():(bool)", []);

    return result[0].toBoolean();
  }

  try_airdropStarted(): ethereum.CallResult<boolean> {
    let result = super.tryCall("airdropStarted", "airdropStarted():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  keyMultiplier(): BigInt {
    let result = super.call("keyMultiplier", "keyMultiplier():(uint256)", []);

    return result[0].toBigInt();
  }

  try_keyMultiplier(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "keyMultiplier",
      "keyMultiplier():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  keyToStartEnd(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "keyToStartEnd",
      "keyToStartEnd(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_keyToStartEnd(
    param0: BigInt,
    param1: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "keyToStartEnd",
      "keyToStartEnd(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nodeLicenseAddress(): Address {
    let result = super.call(
      "nodeLicenseAddress",
      "nodeLicenseAddress():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_nodeLicenseAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "nodeLicenseAddress",
      "nodeLicenseAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolFactoryAddress(): Address {
    let result = super.call(
      "poolFactoryAddress",
      "poolFactoryAddress():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_poolFactoryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "poolFactoryAddress",
      "poolFactoryAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  refereeAddress(): Address {
    let result = super.call("refereeAddress", "refereeAddress():(address)", []);

    return result[0].toAddress();
  }

  try_refereeAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "refereeAddress",
      "refereeAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalSupplyAtStart(): BigInt {
    let result = super.call(
      "totalSupplyAtStart",
      "totalSupplyAtStart():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_totalSupplyAtStart(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalSupplyAtStart",
      "totalSupplyAtStart():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class EndAirdropCall extends ethereum.Call {
  get inputs(): EndAirdropCall__Inputs {
    return new EndAirdropCall__Inputs(this);
  }

  get outputs(): EndAirdropCall__Outputs {
    return new EndAirdropCall__Outputs(this);
  }
}

export class EndAirdropCall__Inputs {
  _call: EndAirdropCall;

  constructor(call: EndAirdropCall) {
    this._call = call;
  }
}

export class EndAirdropCall__Outputs {
  _call: EndAirdropCall;

  constructor(call: EndAirdropCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class ProcessAirdropSegmentCall extends ethereum.Call {
  get inputs(): ProcessAirdropSegmentCall__Inputs {
    return new ProcessAirdropSegmentCall__Inputs(this);
  }

  get outputs(): ProcessAirdropSegmentCall__Outputs {
    return new ProcessAirdropSegmentCall__Outputs(this);
  }
}

export class ProcessAirdropSegmentCall__Inputs {
  _call: ProcessAirdropSegmentCall;

  constructor(call: ProcessAirdropSegmentCall) {
    this._call = call;
  }

  get _qtyToProcess(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ProcessAirdropSegmentCall__Outputs {
  _call: ProcessAirdropSegmentCall;

  constructor(call: ProcessAirdropSegmentCall) {
    this._call = call;
  }
}

export class ProcessAirdropSegmentOnlyMintCall extends ethereum.Call {
  get inputs(): ProcessAirdropSegmentOnlyMintCall__Inputs {
    return new ProcessAirdropSegmentOnlyMintCall__Inputs(this);
  }

  get outputs(): ProcessAirdropSegmentOnlyMintCall__Outputs {
    return new ProcessAirdropSegmentOnlyMintCall__Outputs(this);
  }
}

export class ProcessAirdropSegmentOnlyMintCall__Inputs {
  _call: ProcessAirdropSegmentOnlyMintCall;

  constructor(call: ProcessAirdropSegmentOnlyMintCall) {
    this._call = call;
  }

  get _qtyToProcess(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ProcessAirdropSegmentOnlyMintCall__Outputs {
  _call: ProcessAirdropSegmentOnlyMintCall;

  constructor(call: ProcessAirdropSegmentOnlyMintCall) {
    this._call = call;
  }
}

export class ProcessAirdropSegmentOnlyStakeCall extends ethereum.Call {
  get inputs(): ProcessAirdropSegmentOnlyStakeCall__Inputs {
    return new ProcessAirdropSegmentOnlyStakeCall__Inputs(this);
  }

  get outputs(): ProcessAirdropSegmentOnlyStakeCall__Outputs {
    return new ProcessAirdropSegmentOnlyStakeCall__Outputs(this);
  }
}

export class ProcessAirdropSegmentOnlyStakeCall__Inputs {
  _call: ProcessAirdropSegmentOnlyStakeCall;

  constructor(call: ProcessAirdropSegmentOnlyStakeCall) {
    this._call = call;
  }

  get keyIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class ProcessAirdropSegmentOnlyStakeCall__Outputs {
  _call: ProcessAirdropSegmentOnlyStakeCall;

  constructor(call: ProcessAirdropSegmentOnlyStakeCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class StartAirdropCall extends ethereum.Call {
  get inputs(): StartAirdropCall__Inputs {
    return new StartAirdropCall__Inputs(this);
  }

  get outputs(): StartAirdropCall__Outputs {
    return new StartAirdropCall__Outputs(this);
  }
}

export class StartAirdropCall__Inputs {
  _call: StartAirdropCall;

  constructor(call: StartAirdropCall) {
    this._call = call;
  }
}

export class StartAirdropCall__Outputs {
  _call: StartAirdropCall;

  constructor(call: StartAirdropCall) {
    this._call = call;
  }
}

export class UpdateAidropCountCall extends ethereum.Call {
  get inputs(): UpdateAidropCountCall__Inputs {
    return new UpdateAidropCountCall__Inputs(this);
  }

  get outputs(): UpdateAidropCountCall__Outputs {
    return new UpdateAidropCountCall__Outputs(this);
  }
}

export class UpdateAidropCountCall__Inputs {
  _call: UpdateAidropCountCall;

  constructor(call: UpdateAidropCountCall) {
    this._call = call;
  }

  get _airdropCounter(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateAidropCountCall__Outputs {
  _call: UpdateAidropCountCall;

  constructor(call: UpdateAidropCountCall) {
    this._call = call;
  }
}

export class UpdateMultiplierCall extends ethereum.Call {
  get inputs(): UpdateMultiplierCall__Inputs {
    return new UpdateMultiplierCall__Inputs(this);
  }

  get outputs(): UpdateMultiplierCall__Outputs {
    return new UpdateMultiplierCall__Outputs(this);
  }
}

export class UpdateMultiplierCall__Inputs {
  _call: UpdateMultiplierCall;

  constructor(call: UpdateMultiplierCall) {
    this._call = call;
  }

  get _keyMultiplier(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMultiplierCall__Outputs {
  _call: UpdateMultiplierCall;

  constructor(call: UpdateMultiplierCall) {
    this._call = call;
  }
}

export class UpdateStartEndCall extends ethereum.Call {
  get inputs(): UpdateStartEndCall__Inputs {
    return new UpdateStartEndCall__Inputs(this);
  }

  get outputs(): UpdateStartEndCall__Outputs {
    return new UpdateStartEndCall__Outputs(this);
  }
}

export class UpdateStartEndCall__Inputs {
  _call: UpdateStartEndCall;

  constructor(call: UpdateStartEndCall) {
    this._call = call;
  }

  get keyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get start(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get end(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateStartEndCall__Outputs {
  _call: UpdateStartEndCall;

  constructor(call: UpdateStartEndCall) {
    this._call = call;
  }
}
