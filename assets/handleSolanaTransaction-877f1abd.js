import{c_ as s,dV as l}from"./index-e0ea4d9f.js";import{T as c}from"./CryptoWalletConnectionHandler-e02a91af.js";import"./index-b813cbe7.js";import"./clsx.m-0167a749.js";import"./isAddressEqual-445ac4d5.js";import"./index-913e385b.js";function C(d){return s(this,arguments,function*({primaryWallet:o,serializedTransaction:a,iframeClient:e}){let{connector:i}=o,n;try{n=yield i.getSigner()}catch(r){console.error("[CryptoWalletConnectionHandler] failed to get signer",r),e.send("crypto:send-transaction:failed",{error:"Failed to get signer"});return}let t;try{t=c.from(l.decode(a))}catch(r){console.error("[CryptoWalletConnectionHandler] failed to deserialize transaction",r),e.send("crypto:send-transaction:failed",{error:"Failed to deserialize transaction"});return}try{let{signature:r}=yield n.signAndSendTransaction(t);console.log("[CryptoWalletConnectionHandler] txId",r),e.send("crypto:send-transaction:success",{txId:r})}catch(r){console.error("[CryptoWalletConnectionHandler] failed to send transaction",r),e.send("crypto:send-transaction:failed",{error:r.message})}})}export{C as handleSolanaTransaction};
